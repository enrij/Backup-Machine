// <auto-generated />
using System;
using BackupMachine.PoC.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackupMachine.PoC.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BackupMachineContext))]
    [Migration("20220401205638_Initial-Catalog")]
    partial class InitialCatalog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.FileCopy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PreviousVersionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SnapshotId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.HasIndex("PreviousVersionId")
                        .IsUnique();

                    b.HasIndex("SnapshotId");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.FolderCopy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentFolderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PreviousVersionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SnapshotId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentFolderId");

                    b.HasIndex("PreviousVersionId")
                        .IsUnique();

                    b.HasIndex("SnapshotId");

                    b.ToTable("Folders", (string)null);
                });

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.Snapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Snapshots", (string)null);
                });

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.FileCopy", b =>
                {
                    b.HasOne("BackupMachine.PoC.Domain.Entities.FolderCopy", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BackupMachine.PoC.Domain.Entities.FileCopy", "PreviousVersion")
                        .WithOne()
                        .HasForeignKey("BackupMachine.PoC.Domain.Entities.FileCopy", "PreviousVersionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BackupMachine.PoC.Domain.Entities.Snapshot", "Snapshot")
                        .WithMany()
                        .HasForeignKey("SnapshotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("PreviousVersion");

                    b.Navigation("Snapshot");
                });

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.FolderCopy", b =>
                {
                    b.HasOne("BackupMachine.PoC.Domain.Entities.FolderCopy", "ParentFolder")
                        .WithMany("Folders")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BackupMachine.PoC.Domain.Entities.FolderCopy", "PreviousVersion")
                        .WithOne()
                        .HasForeignKey("BackupMachine.PoC.Domain.Entities.FolderCopy", "PreviousVersionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BackupMachine.PoC.Domain.Entities.Snapshot", "Snapshot")
                        .WithMany()
                        .HasForeignKey("SnapshotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParentFolder");

                    b.Navigation("PreviousVersion");

                    b.Navigation("Snapshot");
                });

            modelBuilder.Entity("BackupMachine.PoC.Domain.Entities.FolderCopy", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
